vector<int> Solution::repeatedNumber(const vector<int> &p) {
    unsigned long long int val=0,val1=0;
    int n=p.size(),i;
    int a=0,b=0;
    vector<int> v;
    unsigned long long int sum=0,sqsum=0;
    for(i=0;i<n;i++){
        sum+=(long long)p[i];
        val=((long long)p[i]*(long long)p[i]);
        sqsum+=val;
    }
    unsigned long long int temp=(long long)(n);
    temp*=(long long)(n+1);
    temp/=2;
    unsigned long long int fact= (long long)(n);
    fact*=(long long)(n+1);
    val=(long long)(2*n)+1;
    fact*=val;
    fact/=6;
    if(temp>sum){        //b<a
       val=temp-sum;
       val1=(fact-sqsum);
       val1/=val;
       b=(val+val1);
       b/=2;
       a=val1-b;
       
    }
    else{        //b>a
        val=sum-temp;
        val1=(sqsum-fact);
        val1/=val;
        a=(val+val1);
        a/=2;
        b=(val1-a);
    }
    v.push_back(a);
    v.push_back(b);
    return v;
    
}
